{"remainingRequest":"/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/src/views/Users.vue?vue&type=style&index=0&lang=sass&scope=true&","dependencies":[{"path":"/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/src/views/Users.vue","mtime":1617062562984},{"path":"/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xoo3/Documentos/ACCIONA/aplicacion/vue-random-users/frontend/vue-random-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgCi5wcnVlYmExCiAgYm9yZGVyOiAxcHggc29saWQgbm9uZQogIGJveC1zaGFkb3c6IG5vbmUhaW1wb3J0YW50CiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQhaW1wb3J0YW50CiAgY29sb3I6IHdoaXRlCg=="},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <mdb-container class=\"mt-4\">\n      <mdb-row class=\"d-flex justify-content-end\">\n        <mdb-btn class=\"mr-3\" color=\"primary\" @click=\"fetchData\"><mdb-icon icon=\"search\"/></mdb-btn>\n        <mdb-btn class=\"mr-3\" color=\"primary\" @click=\"goExports\"><mdb-icon icon=\"file-export\"/></mdb-btn>\n      </mdb-row>\n      <mdb-row class=\"table-height\">\n        <data-table :limitedItems=\"limitedItems\"/>\n      </mdb-row>\n      <mdb-row class=\"mb-5 pagination-height\" >\n        <pagination :page=\"page\" :numPags=\"numPags\" @updatePage=\"updatePage\" v-if=\"numPags>1\"/>\n      </mdb-row>\n      <mdb-row class=\"mt-3\">\n        <gender-filter :genderSelected=\"genderSelected\" @updateGender=\"updateGender\" />\n        <age-filter :age=\"age\" @updateAge=\"updateAge\" />\n        <nat-filter :natSelected=\"natSelected\" @updateNat=\"updateNat\" />\n      </mdb-row>\n    </mdb-container>\n \n</template>\n\n<script>\n\nimport Vue from \"vue\";\nimport {mdbContainer, mdbRow, mdbBtn, mdbIcon} from 'mdbvue';\nimport moment from 'moment';\nimport Pagination from '../components/Pagination.vue';\nimport DataTable from '../components/DataTable.vue';\nimport GenderFilter from '../components/GenderFilter.vue';\nimport NatFilter from '../components/NatFilter.vue';\nimport AgeFilter from '../components/AgeFilter.vue';\n\n\n\nexport default {\n  name: 'Users',\n  components:{\n    mdbContainer,\n    mdbRow,\n    mdbBtn,\n    mdbIcon,\n    Pagination,\n    DataTable,\n    GenderFilter,\n    NatFilter,\n    AgeFilter\n  },\n  data() {\n    return {\n      users: [],\n      usersFiltered:[],\n      numUsers: 1,\n      usersPag: [],\n      page:1,\n      age: [0,122],\n      natSelected: '',\n      genderSelected: '',\n      loaded: false\n    }\n  },\n  created() {\n    this.min = 0\n    this.max = 122\n    this.enableCross = false\n\n    this.users = this.$parent.users\n    this.usersFiltered = this.$parent.usersFiltered\n    this.numUsers = this.$parent.numUsers\n    this.usersPag = this.$parent.usersPag\n    this.page = this.$parent.page\n    this.value = this.$parent.value\n    this.natSelected = this.$parent.natSelected\n    this.genderSelected = this.$parent.genderSelected\n    this.loaded = this.$parent.loaded\n  },\n  beforeDestroy() {\n    this.$parent.users = this.users\n    this.$parent.usersFiltered = this.usersFiltered\n    this.$parent.numUsers = this.numUsers\n    this.$parent.usersPag = this.usersPag\n    this.$parent.page = this.page\n    this.$parent.value = this.value\n    this.$parent.natSelected = this.natSelected\n    this.$parent.genderSelected = this.genderSelected\n    this.$parent.loaded = this.loaded\n  },\n  mounted(){\n    this.fetchData\n  },\n  computed: {\n    limitedItems() {\n      return this.usersFiltered.slice(parseInt(this.page-1)*10, parseInt(this.page)*10 )\n    },\n    numPags(){\n      return Math.trunc(parseInt(this.numUsers)/10)\n    },\n  },\n  methods:{\n    //PAGINATION\n    async goExports(){\n      await this.fetchData()\n      this.$router.push({ name: 'Exports', params: {users: this.users }})\n    },\n    updatePage(newValue){\n      this.page = newValue\n    },\n    updateGender(newValue){\n      this.genderSelected = newValue\n    },\n    updateAge(newValue){\n      this.age = newValue\n    },\n    updateNat(newValue){\n      this.natSelected = newValue\n    },\n    //SERVICIOS\n    filterItems(){\n      let itemsFiltered = this.users\n\n      if (this.natSelected!==''){\n        itemsFiltered = itemsFiltered.filter(obj => obj.nationality == this.natSelected)\n      }\n\n      if (this.genderSelected!==''){\n        itemsFiltered= itemsFiltered.filter(obj => obj.gender == this.genderSelected)\n      }\n      itemsFiltered = itemsFiltered.filter(obj => obj.age > this.age[0] && obj.age < this.age[1])\n      this.usersFiltered = itemsFiltered\n      this.getNumUsers()\n\n    },\n    getDataUsers(res){\n      this.users2 = res.data.results\n    },\n    getNumUsers(){\n      this.numUsers = this.usersFiltered.length\n      this.page = 1\n    },\n    prepareData(){\n      this.users = this.users2.map(user => ({\n        id: user.login.uuid,\n        name: user.name.title + \" \" + user.name.first + \" \" + user.name.last,\n        username: user.login.username,\n        gender: user.gender,\n        nationality: user.nat,\n        streetNumber: user.location.street.number,\n        streetName: user.location.street.name,\n        city: user.location.city,\n        state: user.location.state,\n        postcode: user.location.postcode,\n        latitude: user.location.coordinates.latitude,\n        longitude: user.location.coordinates.longitude,\n        registered: user.registered.date,\n        phone: user.phone,\n        cell: user.cell,\n        email: user.email,\n        imageLarge: user.picture.large,\n        birthdate: moment().subtract(user.dob.age, 'years').format('YYYY-MM-DD'),\n        age:user.dob.age,\n        registrationDate: user.registered.date,\n        favourite:false\n      }))\n    },\n    async fetchData (){\n      try{\n        if(this.loaded == false){\n          const res = await Vue.axios({url:'/api/1.3/?results=100&seed=abc'})\n          this.getDataUsers(res)\n          this.prepareData()\n        }\n          this.filterItems()\n          this.getNumUsers()\n          this.loaded = true\n      }catch(e){\n          console.log(e)\n      }\n    }\n    /*dataPagination(){\n      this.usersPag = this.users.slice(parseInt(this.page)*10, parseInt(this.page)*10 + 10);\n    }*/\n  }\n}\n</script>\n\n<style lang=\"sass\" scope>  \n.prueba1\n  border: 1px solid none\n  box-shadow: none!important\n  background: transparent!important\n  color: white\n</style>\n"]}]}